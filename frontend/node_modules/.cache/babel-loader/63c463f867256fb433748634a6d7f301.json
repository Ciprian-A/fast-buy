{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(i => i.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(i => i.product === existItem.product ? item : i)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(i => i.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Ciprian/Desktop/desk1/dev-folder/fast-buy/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","i","product","map","filter"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,QAA8C,4BAA9C;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA2BC,MAA3B,KAAsC;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,aAAL;AACE,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB;;AAEA,UAAGH,SAAH,EAAc;AACZ,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,SAAS,EAAGD,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAAlE;AAFP,SAAP;AAKD,OAND,MAMO;AACL,eAAO,EACL,GAAGR,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFN,SAAP;AAID;;AACD,SAAKN,gBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAjD;AAFN,OAAP;;AAIJ;AACE,aAAOL,KAAP;AAvBJ;AAyBD,CA1BM","sourcesContent":["import {CART_ADD_ITEM, CART_REMOVE_ITEM} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: []}, action) => {\r\n  switch(action.type) {\r\n    case CART_ADD_ITEM: \r\n      const item = action.payload\r\n      const existItem = state.cartItems.find(i => i.product === item.product)\r\n\r\n      if(existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems : state.cartItems.map(i => i.product === existItem.product ? item : i )\r\n\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item]\r\n        }\r\n      }\r\n      case CART_REMOVE_ITEM:\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.filter(i => i.product !== action.payload)\r\n        }\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}